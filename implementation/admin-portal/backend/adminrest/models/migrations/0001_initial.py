# Generated by Django 3.2.8 on 2021-11-10 19:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('request_template', models.TextField()),
                ('status', models.CharField(choices=[('STOPPED', 'Stopped'), ('ACTIVE', 'Active')], default='STOPPED', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('database_identifier', models.CharField(max_length=255, unique=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='databases', to='models.community')),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('filter', models.TextField(null=True)),
                ('status', models.CharField(choices=[('STOPPED', 'Stopped'), ('ACTIVE', 'Active')], default='STOPPED', max_length=20)),
                ('communities', models.ManyToManyField(related_name='filters', to='models.Community')),
            ],
        ),
        migrations.CreateModel(
            name='FilterSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.CharField(max_length=255)),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='models.filter')),
            ],
        ),
        migrations.CreateModel(
            name='DatabaseUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('rows', models.IntegerField()),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.database')),
            ],
            options={
                'ordering': ('-time',),
            },
        ),
        migrations.CreateModel(
            name='DatabaseHealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('reason', models.TextField()),
                ('database', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.database')),
            ],
            options={
                'ordering': ('-time',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationSentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('response_code', models.IntegerField()),
                ('response_data', models.TextField()),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='models.application')),
            ],
            options={
                'ordering': ('-time',),
            },
        ),
        migrations.AddField(
            model_name='application',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='models.community'),
        ),
        migrations.AddField(
            model_name='application',
            name='filter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='models.filter'),
        ),
    ]
