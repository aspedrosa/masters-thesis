{
  "connector.class": "io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
  "filters": "ParseDelimitedRow",
  "filters.ParseDelimitedRow.extractColumnName": "headers",
  "filters.ParseDelimitedRow.trimColumn": "true",
  "filters.ParseDelimitedRow.columns": "analysis_id:long;stratum_1:string;stratum_2:string;stratum_3:string;stratum_4:string;stratum_5:string;count_value:long;min_value:double;max_value:double;avg_value:double;stdev_value:double;median_value:double;p10_value:double;p25_value:double;p75_value:double;p90_value:double",
  "filters.ParseDelimitedRow.type": "io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter",
  "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.CLEANUP_POLICY_CLASS",
  "fs.listing.class": "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
  "fs.listing.recursive.enabled": false,
  "fs.listing.directory.path":"/tmp/achilles_files",
  "fs.scan.directory.path":"/tmp/achilles_files",
  "cleaner.output.failed.path":"/tmp/achilles_files/failed",
  "cleaner.output.succeed.path":"/tmp/achilles_files/succeed",
  "fs.listing.filters":"io.streamthoughts.kafka.connect.filepulse.fs.filter.RegexFileListFilter",
  "fs.listing.interval.ms": "10000",
  "file.filter.regex.pattern":".*\\.csv$",
  "offset.attributes.string": "name+hash",
  "skip.headers": "1",
  "topic": "db_AGENT_DATABASE_IDENTIFIER",
  "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalRowFileInputReader",
  "tasks.file.status.storage.class": "io.streamthoughts.kafka.connect.filepulse.state.KafkaFileObjectStateBackingStore",
  "tasks.file.status.storage.bootstrap.servers": "BOOTSTRAP_SERVERS",
  "tasks.file.status.storage.topic": "db_AGENT_DATABASE_IDENTIFIER_status",
  "tasks.file.status.storage.topic.partitions": 1,
  "tasks.file.status.storage.topic.replication.factor": 1,
  "tasks.max": 1,
  "internal.kafka.reporter.bootstrap.servers": "BOOTSTRAP_SERVERS"
}
